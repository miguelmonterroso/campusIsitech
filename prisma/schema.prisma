generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique
  password      String
  role          Role      @default(STUDENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  courses       Course[]  @relation("StudentCourses")
  teaching      Course[]  @relation("InstructorCourses")
  billingInfo   Billing?
}

enum Role {
  STUDENT
  INSTRUCTOR
}

model Course {
  id            Int       @id @default(autoincrement())
  name          String
  description   String
  image         String
  price         Float
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  instructor    User      @relation("InstructorCourses", fields: [instructorId], references: [id])
  instructorId  Int
  students      User[]    @relation("StudentCourses")
  lessons       Lesson[]
}

model Lesson {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  videoUrl    String
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    Int
  createdAt   DateTime  @default(now())
}

model Billing {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @unique
  amount      Float
  dueDate     DateTime
  status      Status    @default(PENDING)
  createdAt   DateTime  @default(now())
}

enum Status {
  PENDING
  PAID
  OVERDUE
}
